import Dialog from"../helpers/Dialog.js";let crops=[];class Crop{constructor(e,t,o,r,a,l,s,c,n){this.cropId=e;this.cropName=t;this.cropType=o;this.scientificName=r;this.plantingSeason=a;this.growthDuration=l;this.unit=s;this.weight=c;this.cropImg=n}async createCrop(t){const e=crops.find(e=>e.cropName===t.cropName);if(e){alert("Crop with the same name already exists");return}$("#progressMessage").text("Uploading...");$("#loader").show();$("body").addClass("no-scroll");try{await $.ajax({url:"/api/crops",type:"POST",contentType:"application/json",data:JSON.stringify(t)});toastr.success("Crop added successfully!","Success",{timeOut:5e3,positionClass:"toast-top-center",toastClass:"toast-success-custom"})}catch(o){console.error("Error:",o);toastr.error("Failed to add crop. Please try again.","Error",{timeOut:5e3,positionClass:"toast-top-center",toastClass:"toast-error-custom"})}finally{$("#loader").hide();$("body").removeClass("no-scroll");$("#progressMessage").text("")}}updateCrop(t){const e=crops.find(e=>e.cropName===t.cropName&&e.cropId!==t.cropId);if(e){alert("Crop with the same name already exists");return}crops=crops.map(e=>e.cropId===t.cropId?{...e,...t}:e);fetch(`/api/crops/${t.cropId}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(e=>e.json()).then(e=>{})["catch"](e=>{console.error("Error:",e)})}removeCrop(t){fetch(`/api/crops/${t}`,{method:"DELETE",headers:{"Content-Type":"application/json"}}).then(e=>{if(e.status===204){crops=crops.filter(e=>e.cropId!==t);}else if(e.status===404){console.error(`Crop with ID ${t} not found.`)}else{console.error(`Failed to delete crop with ID ${t}.`)}})["catch"](e=>{console.error("Error:",e)})}}function getCrop(){$.ajaxSetup({headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")}});$.ajax({url:"/api/crops",method:"GET",success:function(e){let t=e;crops=t;},error:function(e,t,o){console.error("Error fetching crops:",o)}})}getCrop();function searchCrop(t){const e=crops.filter(e=>e.cropName.toLowerCase().includes(t.toLowerCase()));return e}function initializeMethodsCrop(){var m=null;var s=5;var c=1;var h=false;var o=null;async function g(e=null){await new Promise(e=>setTimeout(e,1e3));$("#cropTableBody").empty();var t=(c-1)*s;var o=t+s;if(e){const l=searchCrop(e);if(l.length>0){l.forEach(e=>{$("#cropTableBody").append(`
                        <tr data-index=${e.cropId} class="text-center">
                            <td style="display: none;">${e.cropId}</td>
                            <td><img src="${e.cropImg}" alt="${e.cropName}" class="img-thumbnail" width="50" height="50"></td>
                            <td>${e.cropName}</td>
                            <td>${e.cropType}</td>
                            <td>${e.scientificName}</td>
                            <td class="crop-cell" title="${e.plantingSeason}">${e.plantingSeason}</td>
                            <td class="crop-cell" title="${e.growthDuration}">${e.growthDuration}</td>
                            <td>${e.unit}</td>
                            <td>${e.weight}</td>
                        </tr>
                    `)})}else{$("#cropTableBody").append(`
                    <tr>
                        <td colspan="9">Crop not found!</td>
                    </tr>
                `)}}else{for(var r=t;r<o;r++){if(r>=crops.length){break}var a=crops[r];$("#cropTableBody").append(`
                    <tr data-index=${a.cropId} class="text-center">
                        <td style="display: none;">${a.cropId}</td>
                        <td><img src="${a.cropImg}" alt="${a.cropName}" class="img-thumbnail" width="50" height="50"></td>
                        <td>${a.cropName}</td>
                        <td>${a.cropType}</td>
                        <td>${a.scientificName}</td>
                        <td class="crop-cell" title="${a.plantingSeason}">${a.plantingSeason}</td>
                        <td class="crop-cell" title="${a.growthDuration}">${a.growthDuration}</td>
                        <td>${a.unit}</td>
                        <td>${a.weight}</td>
                    </tr>
                `)}}}g();$("#search").on("input",function(){let e=$("#search").val();g(e)});$("#prevBtn").click(function(){if(c>1){c--;g()}});$("#nextBtn").click(function(){var e=Math.ceil(crops.length/s);if(c<e){c++;g()}});let r="";$("#submitBtn").click(function(e){e.preventDefault();var a=Number($("#cropId").val());var l=$("#cropName").val();var s=$("#cropType").val();var c=$("#scientificName").val();var n=$("#plantingSeason").val();var i=$("#growthDuration").val();var p=$("#unit").val();var d=$("#weight").val();var t=document.getElementById("cropImg").files[0];var u=null;if(t){var o=new FileReader;o.onloadend=function(){var r=new Image;r.src=o.result;r.onload=function(){var e=document.createElement("canvas");var t=e.getContext("2d");e.width=r.width;e.height=r.height;t.drawImage(r,0,0);u=e.toDataURL("image/webp",.8);let o=new Crop(a,l,s,c,n,i,p,d,u);if(m!==null&&h){o.updateCrop(o);m=null;$("#submitBtn").text("Add crop");$("#cancelBtn").hide();h=false}else{o.createCrop(o)}getCrop();g();$("#cropForm")[0].reset();$("#cropTableBody tr").removeClass("selected-row")}};o.readAsDataURL(t)}else{if(m!==null&&h){let e=new Crop(a,l,s,c,n,i,p,d,r);e.updateCrop(e);m=null;$("#submitBtn").text("Add crop");$("#cancelBtn").hide();h=false}else{let e=new Crop(a,l,s,c,n,i,p,d,null);e.createCrop(e)}getCrop();g();r="";$("#cropForm")[0].reset();$("#lblCropImg").val("Upload Image:");$("#cropTableBody tr").removeClass("selected-row");$("#editBtn").prop("disabled",true);$("#deleteBtn").prop("disabled",true)}});function t(){$("#editBtn").prop("disabled",true);$("#deleteBtn").prop("disabled",true);m=null;$("#cropTableBody tr").removeClass("selected-row")}$("#editBtn").click(async function(){const e=await Dialog.confirmDialog("Confirm Edit","Are you sure you want to edit this crop's details?");if(e.operation===1){$("#editModal").modal("hide");$("#cancelBtn").show();$("#cropId").val(o.cropId);$("#cropName").val(o.cropName);$("#cropType").val(o.cropType);$("#scientificName").val(o.scientificName);$("#plantingSeason").val(o.plantingSeason);$("#growthDuration").val(o.growthDuration);$("#unit").val(o.unit);$("#weight").val(o.weight);r=o.cropImg;$("#lblCropImg").text("Upload New Image (Optional):");h=true;$("#type").val(o.type);$("#submitBtn").text("Update Crop")}$("#cropTableBody tr").removeClass("selected-row");$("#editBtn").prop("disabled",true);$("#deleteBtn").prop("disabled",true)});$("#cancelEdit").click(function(){t();$("#cropTableBody tr").removeClass("selected-row");$("#editBtn").prop("disabled",true);$("#deleteBtn").prop("disabled",true)});$("#cancelBtn").click(function(){m=null;$("#cropForm")[0].reset();$("#submitBtn").text("Add Crop");$("#cancelBtn").hide();$("#cropTableBody tr").removeClass("selected-row");$("#editBtn").prop("disabled",true);$("#deleteBtn").prop("disabled",true)});$("#deleteBtn").click(async function(){const e=await Dialog.confirmDialog("Confirm Deletion","Are you sure you want to delete this crop?");if(e.operation===1){let e=new Crop;e.removeCrop(o.cropId);getCrop();g();t()}else{$("#cropTableBody tr").removeClass("selected-row");$("#editBtn").prop("disabled",true);$("#deleteBtn").prop("disabled",true)}});$("#cropTableBody").on("click","tr",function(){var e=$(this);var t=e.data("index");o=crops.find(e=>e.cropId===t);m=t;if(m!==null){$("#cropTableBody tr").removeClass("selected-row");$("#cropTableBody tr").filter(function(){return parseInt($(this).find("td:eq(0)").text(),10)===m}).addClass("selected-row");$("#editBtn").prop("disabled",false);$("#deleteBtn").prop("disabled",false)}else{$("#cropTableBody tr").removeClass("selected-row")}})}export{Crop,getCrop,searchCrop,initializeMethodsCrop,crops};